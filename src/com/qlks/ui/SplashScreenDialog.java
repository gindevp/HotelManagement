/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.qlks.ui;

import com.qlks.util.Auth;
import com.qlks.util.MsgBox;
import com.qlks.util.XImage;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;

/**
 *
 * @author hungn
 */
public class SplashScreenDialog extends javax.swing.JDialog {

    /**
     * Creates new form SplashScreenDialog
     */
    public SplashScreenDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        vip();
//        new LoginDialog(this, modal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("jButton1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jButton1)
                .addContainerGap(253, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addContainerGap(243, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplashScreenDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SplashScreenDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SplashScreenDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SplashScreenDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SplashScreenDialog dialog = new SplashScreenDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    private void vip() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    private void openChildFrm(JInternalFrame frm) {
        if (!Auth.isLogin()) {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        } else {
//            for (JInternalFrame frmItem : desMain.getAllFrames()) {
//                frmItem.dispose();
//            }
//            frm.setLocation((desMain.getWidth() - frm.getWidth()) / 2,
//                    (desMain.getHeight() - 20) / 2 - frm.getHeight() / 2 - 20);
//            desMain.add(frm);
            frm.setVisible(true);
        }
    }

    private void openNhanVien() {
//        this.openChildFrm(new NhanVienFrm());
    }

    private void showName() {
        Date date = new Date();
        int hour = date.getHours();
        String mess = "";
        String iconPath = "/com/qlks/icon/";
        if (hour >= 1 && hour < 12) {
            mess = "Good morning, ";
            iconPath += "partly_cloudy_day_24px.png";
        } else if (hour >= 12 && hour < 16) {
            mess = "Good afternoon, ";
            iconPath += "sun_24px.png";
        } else if (hour >= 16 && hour < 21) {
            mess = "Good evening, ";
            iconPath += "sunset_24px.png";
        } else {
            mess = "Good night, ";
            iconPath += "night_landscape_24px.png";
        }
//        lblName.setText(mess + Auth.user.getTen());
//        lblName.setIcon(new ImageIcon(XImage.class.getResource(iconPath)));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
